import sqlite3
# Подключимся к базе данных (файл будет создан, если его не было)
# Для тестовых целей можно использовать ":memory:" вместо "orders.db",
# тогда база будет храниться в ОЗУ и исчезать после завершения скрипта.
def main():
    conn = sqlite3.connect("orders.db")
    cursor = conn.cursor()
    # Создадим таблицу заказов (orders)
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS orders (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        order_title TEXT NOT NULL,
        contact TEXT,
        status TEXT,
        total_sum REAL,
        order_date TEXT,
        order_number TEXT,
        address TEXT,
        responsible TEXT
    )
    """)

    # Набор данных для вставки
    orders_data = [
    ("Заказ", "Дмитрий", "Новый",    24000.00, "02.08.2015", "020", "Горького, 17",              "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Новый",     7000.00, "02.08.2015", "019", "Ленина, 19",                "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Новый",     4500.00, "02.08.2015", "018", "Веры Засулич, 10а",         "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Новый",     9800.00, "02.08.2015", "017", "Пушкина, 106а",             "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Новый",    11000.00, "02.08.2015", "016", "Соликамская, 8",            "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Новый",    14000.00, "02.08.2015", "015", "Шоссе Космонавтов, 179",    "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",   5000.00, "02.08.2015", "014", "Куйбышева, 10",             "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",   6700.00, "02.08.2015", "013", "Локомотивная, 4а",          "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Отправлен",12300.00, "02.08.2015", "012", "Лермонтова, 7",             "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Отправлен", 5600.00, "02.08.2015", "011", "Старцева, 9",               "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Отправлен",10000.00, "02.08.2015", "010", "Чкалова, 98",               "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Отправлен", 9000.00, "02.08.2015", "009", "Плеханова, 7",              "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Отправлен",17000.00, "02.08.2015", "008", "Кронштадская, 77",          "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",   4500.00, "02.08.2015", "007", "Пушкина, 2",                "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",  12000.00, "02.08.2015", "006", "Газеты Звезда, 90",         "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",   6400.00, "02.08.2015", "005", "Леонова, 5",                "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Оплачен",  12400.00, "02.08.2015", "004", "Сибирская, 1",              "Новиков Тимофей"),
    ("Заказ", "Дмитрий", "Выполнен", 15000.00, "02.08.2015", "001", "Ленина, 66",                "Новиков Тимофей"),
    ("Заказ", "Василий", "Выполнен", 20000.00, "02.08.2015", "002", "Лермонтова, 72",            "Новиков Тимофей"),
    ("Заказ", "Олег Уваров", "Выполнен", 2300.00, "02.08.2015", "003", "Пушкина, 107",            "Новиков Тимофей"),
    ]

    # Очистим таблицу перед вставкой (на случай повторного запуска)
    cursor.execute("DELETE FROM orders")

    # Добавим записи в таблицу
    cursor.executemany("""
    INSERT INTO orders (
        order_title, 
        contact, 
        status, 
        total_sum, 
        order_date, 
        order_number, 
        address, 
        responsible
    ) 
    VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    """, orders_data)
    conn.commit()

    # Выберем и выведем все записи
    cursor.execute("SELECT * FROM orders")
    rows = cursor.fetchall()

    print("Содержимое таблицы orders:\n")
    for row in rows:
        print(row)
    # row — это кортеж значений (id, order_title, contact, ...)
    

    # Закроем соединение
    cursor.close()
    conn.close()
if __name__ == "__main__":
    main()